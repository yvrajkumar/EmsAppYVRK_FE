{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suharika\\\\Desktop\\\\Ruby Applications\\\\ems_app\\\\src\\\\Pages\\\\ResetPassword\\\\ResetPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from './ResetPassword.module.css';\nimport ResetPassword_Img from \"../../Images/ResetPassword.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword() {\n  _s();\n\n  const [newpassword, setnewpassword] = useState({\n    resetcode: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  });\n\n  const onChangeHandler = e => {\n    let user = newpassword;\n    user[e.target.name] = e.target.value;\n    setnewpassword(user);\n  };\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.ResetPassword,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ResetPassword_Image,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ResetPassword_Img,\n        alt: \"ResetPassword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ResetPassword_Box,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.title_SU,\n          children: \"Enter reset code sent to your mail to reset password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Reset Code\",\n          name: \"resetcode\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Password\",\n          name: \"password\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Confirm New Password\",\n          name: \"confirmpassword\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"VW1/tcANfZ/Z9mITzmy1pyUzxdc=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/suharika/Desktop/Ruby Applications/ems_app/src/Pages/ResetPassword/ResetPassword.jsx"],"names":["React","useState","classes","ResetPassword","newpassword","setnewpassword","resetcode","password","confirmpassword","onChangeHandler","e","user","target","name","value","onSubmitHandler","preventDefault","ResetPassword_Image","ResetPassword_Img","ResetPassword_Box","title_SU"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;;AAGA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC;AAC3CK,IAAAA,SAAS,EAAE,EADgC;AAE3CC,IAAAA,QAAQ,EAAE,EAFiC;AAG3CC,IAAAA,eAAe,EAAE;AAH0B,GAAD,CAA9C;;AAKE,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC7B,QAAIC,IAAI,GAAGP,WAAX;AACAO,IAAAA,IAAI,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAJ,GAAsBH,CAAC,CAACE,MAAF,CAASE,KAA/B;AACAT,IAAAA,cAAc,CAACM,IAAD,CAAd;AACD,GAJD;;AAMA,QAAMI,eAAe,GAAG,MAAOL,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACM,cAAF;AACA;AACD,GAHD;;AAKJ,sBACE;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACC,aAAxB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAED,OAAO,CAACe,mBAAxB;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEC,iBAAV;AAA6B,QAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACiB,iBAAxB;AAAA,6BACM;AAAM,QAAA,QAAQ,EAAEJ,eAAhB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAEb,OAAO,CAACkB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,YAFd;AAGE,UAAA,IAAI,EAAC,WAHP;AAIE,UAAA,QAAQ,EAAEX;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAHF,eAQI;AAAA;AAAA;AAAA;AAAA,gBARJ,eAUA;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,cAFhB;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,QAAQ,EAAEA;AAJd;AAAA;AAAA;AAAA;AAAA,gBAVA,eAeI;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAiBA;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,sBAFhB;AAGI,UAAA,IAAI,EAAC,iBAHT;AAII,UAAA,QAAQ,EAAEA;AAJd;AAAA;AAAA;AAAA;AAAA,gBAjBA,eAsBI;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eAwBE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GApDQN,a;;KAAAA,a;AAsDT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport classes from './ResetPassword.module.css';\r\nimport ResetPassword_Img from \"../../Images/ResetPassword.svg\";\r\n\r\nfunction ResetPassword() {\r\n    const [newpassword, setnewpassword] = useState({\r\n        resetcode: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n      });\r\n      const onChangeHandler = (e) => {\r\n        let user = newpassword;\r\n        user[e.target.name] = e.target.value;\r\n        setnewpassword(user);\r\n      };\r\n    \r\n      const onSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n        return;        \r\n      }\r\n    \r\n  return (\r\n    <div className={classes.ResetPassword}>\r\n      <div className={classes.ResetPassword_Image}>\r\n          <img src={ResetPassword_Img} alt=\"ResetPassword\" />\r\n      </div>\r\n      <div className={classes.ResetPassword_Box}>\r\n            <form onSubmit={onSubmitHandler}>\r\n              <h3 className={classes.title_SU}>Enter reset code sent to your mail to reset password.</h3>\r\n              <br></br>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Reset Code\"\r\n                name=\"resetcode\"\r\n                onChange={onChangeHandler}\r\n              /><br></br>\r\n\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"New Password\"\r\n                name=\"password\"\r\n                onChange={onChangeHandler}\r\n              /><br></br>\r\n\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Confirm New Password\"\r\n                name=\"confirmpassword\"\r\n                onChange={onChangeHandler}\r\n              /><br></br>\r\n\r\n              <input type=\"submit\" value=\"SUBMIT\" />\r\n            </form>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}